name: Build and Deploy to ECS

on:
  push:
    branches: [main]

jobs:
  deploy:
    environment: HuaweiEnv
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for amd64
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          docker buildx build \
            --platform linux/amd64 \
            -t sumak-app:${IMAGE_TAG} \
            --output type=docker .
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Save Docker image to tar
        run: docker save sumak-app:${{ env.IMAGE_TAG }} -o ${{ github.workspace }}/sumak-app-${{ env.IMAGE_TAG }}.tar

      - name: Check workspace contents
        run: ls -lh ${{ github.workspace }}

      - name: Copy image to ECS
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USER }}
          password: +1password
          source: 'sumak-app-${{ env.IMAGE_TAG }}.tar'
          target: '/root/'

      - name: Deploy on ECS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USER }}
          password: +1password
          script: |
            docker stop sumak-app || true
            docker rm sumak-app || true
            docker load -i /root/sumak-app-${{ env.IMAGE_TAG }}.tar
            docker run -d \
              --name sumak-app \
              -p 3000:3000 \
              --restart=always \
              -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
              -e LLM_BASE_URL=${{ secrets.LLM_BASE_URL }} \
              -e LLM_API_KEY=${{ secrets.LLM_API_KEY }} \
              -e LLM_MODEL=${{ secrets.LLM_MODEL }} \
              -e OCR_BASE_URL=${{ secrets.OCR_BASE_URL }} \
              -e OCR_API_KEY=${{ secrets.OCR_API_KEY }} \
              -e OCR_MODEL=${{ secrets.OCR_MODEL }} \
              -e STORAGE_ENDPOINT=${{ secrets.STORAGE_ENDPOINT }} \
              -e STORAGE_REGION=${{ secrets.STORAGE_REGION }} \
              -e STORAGE_ACCESS_KEY_ID=${{ secrets.STORAGE_ACCESS_KEY_ID }} \
              -e STORAGE_SECRET_ACCESS_KEY=${{ secrets.STORAGE_SECRET_ACCESS_KEY }} \
              sumak-app:${{ env.IMAGE_TAG }}
            docker image prune -af || true
            rm -f /root/sumak-app-*.tar || true
